prog    ::= stmts

stmts   ::= stmt stmts

stmt    ::= "{" stmts "}"
        |   "if" "(" expr ")" stmt
        |   "while" "(" expr ")" stmt
        |   "out" "(" expr ")" ";"
        |   expr ";"
        |   ";"
        |   e

expr    ::= assgn
assgn   ::= lor { "=" lor }
lor     ::= land { "|" land }
land    ::= equ { "&" equ }
equ     ::= rela { "==" rela }
rela    ::= sum { rel_op sum }
sum     ::= prod { add-op prod }
prod    ::= lnot { mul-op lnot }
lnot    ::= "!" min
        |   min
min    ::= "-" lit
        |   lit
lit     ::= "(" expr ")"
        |   symbol
        |   number
        |   e

add-op  ::= "+" | "-"
mul-op  ::= "*" | "/" | "%"
rel-op  ::= "<" | ">"
